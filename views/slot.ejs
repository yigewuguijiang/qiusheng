<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ËÄÅËôéÊú∫</title>
    <link rel="stylesheet" href="/styles.css">
</head>
<body>
    <a href="/" class="back-button">‚Üê ËøîÂõû</a>
    <div class="game-container">
        <h1>üé∞ ËÄÅËôéÊú∫</h1>
        <p>Áé©ÂÆ∂Ôºö<%= username %></p>
        <p style="color: #666;">ËΩ¨Âä®ËΩÆÁõòÔºå‰∏â‰∏™Áõ∏ÂêåÂõæÊ°àÂç≥ÂèØËé∑ÂæóÂ•ñÂä±ÔºÅ</p>
        
        <div class="slot-machine">
            <div class="reels">
                <div class="reel" id="r1">üçé</div>
                <div class="reel" id="r2">üçã</div>
                <div class="reel" id="r3">üçí</div>
            </div>
            <button id="spinBtn" onclick="spin()">üé∞ ÂºÄÂßãÊóãËΩ¨</button>
        </div>
        
        <div id="result" style="margin-top: 20px; font-size: 1.2rem; min-height: 40px;"></div>
    </div>

    <style>
        .slot-machine {
            padding: 2rem;
            text-align: center;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border-radius: 20px;
            margin: 20px 0;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
        }
        
        .reels {
            display: flex;
            justify-content: center;
            gap: 15px;
            margin-bottom: 2rem;
            padding: 20px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 15px;
            backdrop-filter: blur(10px);
        }
        
        .reel {
            width: 100px;
            height: 100px;
            background: linear-gradient(145deg, #ffffff, #f0f0f0);
            border: 3px solid #e0e0e0;
            border-radius: 15px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 3rem;
            font-weight: bold;
            transition: all 0.3s ease;
            box-shadow: 
                0 8px 15px rgba(0, 0, 0, 0.1),
                inset 0 2px 5px rgba(255, 255, 255, 0.8);
            position: relative;
        }
        
        .reel::before {
            content: '';
            position: absolute;
            top: -3px;
            left: -3px;
            right: -3px;
            bottom: -3px;
            background: linear-gradient(45deg, #ffd700, #ffed4a, #ffd700);
            border-radius: 15px;
            z-index: -1;
            opacity: 0;
            transition: opacity 0.3s ease;
        }
        
        .reel.spinning {
            animation: spinReel 0.1s linear infinite;
            background: #fff9c4;
            border-color: #ffc107;
            transform: scale(1.05);
        }
        
        .reel.win {
            background: linear-gradient(145deg, #d4edda, #c3e6cb);
            border-color: #28a745;
            transform: scale(1.1);
            box-shadow: 
                0 12px 25px rgba(40, 167, 69, 0.3),
                inset 0 2px 5px rgba(255, 255, 255, 0.9);
        }
        
        .reel.win::before {
            opacity: 1;
            animation: goldenGlow 1s ease-in-out infinite alternate;
        }
        
        @keyframes spinReel {
            0% { transform: rotateY(0deg) scale(1.05); }
            100% { transform: rotateY(360deg) scale(1.05); }
        }
        
        @keyframes goldenGlow {
            from { opacity: 0.7; }
            to { opacity: 1; }
        }
        
        .result-win {
            color: #28a745;
            font-weight: bold;
            animation: celebrate 0.8s ease-in-out;
            text-shadow: 0 2px 4px rgba(40, 167, 69, 0.3);
        }
        
        .result-lose {
            color: #6c757d;
        }
        
        @keyframes celebrate {
            0%, 100% { transform: scale(1); }
            25% { transform: scale(1.1) rotate(-2deg); }
            75% { transform: scale(1.1) rotate(2deg); }
        }
        
        #spinBtn {
            background: linear-gradient(45deg, #ff6b6b, #ee5a24);
            color: white;
            border: none;
            padding: 15px 35px;
            font-size: 18px;
            font-weight: bold;
            border-radius: 25px;
            cursor: pointer;
            transition: all 0.3s;
            box-shadow: 0 6px 20px rgba(255, 107, 107, 0.3);
            text-transform: uppercase;
            letter-spacing: 1px;
        }
        
        #spinBtn:hover:not(:disabled) {
            background: linear-gradient(45deg, #ee5a24, #ff6b6b);
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(255, 107, 107, 0.4);
        }
        
        #spinBtn:disabled {
            background: #95a5a6;
            cursor: not-allowed;
            transform: none;
            box-shadow: 0 4px 10px rgba(149, 165, 166, 0.2);
        }

        .prize-info {
            margin-top: 30px;
            background: rgba(255, 255, 255, 0.9);
            border-radius: 12px;
            padding: 20px;
            font-size: 0.9rem;
            color: #666;
        }
        
        .prize-info h3 {
            margin: 0 0 15px 0;
            color: #333;
            font-size: 1.1rem;
        }
        
        .prize-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 10px;
            margin-top: 15px;
        }
        
        .prize-item {
            background: #f8f9fa;
            padding: 10px;
            border-radius: 8px;
            text-align: center;
            border: 1px solid #dee2e6;
        }
        
        
        /* ÊâãÊú∫Á´Ø‰ºòÂåñ */
        @media (max-width: 768px) {
            .slot-machine {
                padding: 1rem;
                margin: 15px 0;
            }
            
            .reels {
                gap: 10px;
                padding: 15px;
                margin-bottom: 1rem;
            }
            
            .reel {
                width: 80px;
                height: 80px;
                font-size: 2rem;
            }
            
            #spinBtn {
                padding: 12px 25px;
                font-size: 16px;
            }
            
            .game-container {
                padding: 15px;
                width: 100%;
                max-width: 400px;
                margin: 0 auto;
                display: flex;
                flex-direction: column;
                align-items: center;
                justify-content: center;
                text-align: center;
            }
            
            .game-container h1 {
                font-size: 1.8rem;
                margin-bottom: 15px;
            }
            
            /* Mobile centering */
            body {
                display: flex;
                justify-content: center;
                align-items: center;
                min-height: 100vh;
                margin: 0;
                padding: 10px;
            }
            
            .prize-info {
                margin-top: 20px;
                padding: 12px;
                font-size: 0.8rem;
            }
            
            .prize-info h3 {
                font-size: 1rem;
                margin-bottom: 10px;
            }
            
            .prize-grid {
                grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));
                gap: 8px;
                font-size: 0.75rem;
            }
            
            .prize-item {
                padding: 8px 4px;
                font-size: 0.75rem;
            }
        }
    </style>

    <script>
        const username = "<%= username %>";
        const csrfToken = "<%= csrfToken %>";
        const reels = ['r1', 'r2', 'r3'];
        const symbols = ['+20', '+10', '-10', '-20', '0', '+5', '-5'];
        
        // ÈáëÈ¢ùÊò†Â∞Ñ
        const symbolMap = {
            '+20': '+20',
            '+10': '+10', 
            '-10': '-10',
            '-20': '-20',
            'Êó†Â•ñ': '0',
            '+5': '+5',
            '-5': '-5'
        };
        
        function generateNonce(length = 16) {
            const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
            return Array.from({ length }, () => chars[Math.floor(Math.random() * chars.length)]).join('');
        }
        
        function animateReels(finalSymbols, reward, isWin) {
            const button = document.getElementById('spinBtn');
            const resultDiv = document.getElementById('result');
            
            button.disabled = true;
            resultDiv.textContent = '';
            
            // ÂºÄÂßãÊóãËΩ¨Âä®Áîª
            reels.forEach(reel => {
                const element = document.getElementById(reel);
                element.classList.add('spinning');
            });
            
            // Ê®°ÊãüÊóãËΩ¨ÊïàÊûú
            let spins = 0;
            const maxSpins = 30 + Math.floor(Math.random() * 15);
            
            const spinInterval = setInterval(() => {
                reels.forEach(reel => {
                    document.getElementById(reel).textContent = 
                        symbols[Math.floor(Math.random() * symbols.length)];
                });
                spins++;
                
                if (spins > maxSpins) {
                    clearInterval(spinInterval);
                    
                    // ÊòæÁ§∫ÊúÄÁªàÁªìÊûú
                    reels.forEach((reel, index) => {
                        const element = document.getElementById(reel);
                        element.classList.remove('spinning');
                        element.textContent = finalSymbols[index];
                        
                        if (isWin) {
                            setTimeout(() => {
                                element.classList.add('win');
                                setTimeout(() => element.classList.remove('win'), 3000);
                            }, 100 * index);
                        }
                    });
                    
                    // ÊòæÁ§∫ÁªìÊûúÊ∂àÊÅØ
                    setTimeout(() => {
                        if (reward && reward !== '0' && reward !== 'Êó†Â•ñ') {
                            resultDiv.innerHTML = `
                                <div class="result-win">
                                    ${reward}
                                </div>
                            `;
                        } else {
                            resultDiv.innerHTML = `<div class="result-lose">0</div>`;
                        }
                        
                        button.disabled = false;
                    }, 800);
                }
            }, 80);
        }
        
        async function spin() {
            const nonce = generateNonce();
            const timestamp = Math.floor(Date.now() / 1000);
            const resultDiv = document.getElementById('result');
            
            resultDiv.innerHTML = '<div style="color: #0984e3; font-weight: bold;">üé∞ ÊóãËΩ¨‰∏≠...</div>';
            
            try {
                const response = await fetch('/api/slot/spin', {
                    method: 'POST',
                    headers: { 
                        'Content-Type': 'application/json',
                        'X-CSRF-Token': csrfToken
                    },
                    body: JSON.stringify({ username, timestamp, nonce })
                });
                
                const data = await response.json();
                
                if (!data.success) {
                    resultDiv.innerHTML = `<div style="color: #dc3545;">ÈîôËØØÔºö${data.message}</div>`;
                    document.getElementById('spinBtn').disabled = false;
                    return;
                }
                
                // ËΩ¨Êç¢ÊñáÊú¨ÁªìÊûú‰∏∫ÈáëÈ¢ùÁ¨¶Âè∑
                const finalSymbols = data.reels.map(reel => symbolMap[reel] || '0');
                const isWin = data.reward && data.reward !== '0' && data.reward !== 'Êó†Â•ñ';
                
                animateReels(finalSymbols, data.reward, isWin);
                
            } catch (error) {
                resultDiv.innerHTML = '<div style="color: #dc3545;">ÁΩëÁªúÈîôËØØÔºåËØ∑ÈáçËØï</div>';
                document.getElementById('spinBtn').disabled = false;
                console.error('Error:', error);
            }
        }
        
        // ÂàùÂßãÂåñÈöèÊú∫Á¨¶Âè∑
        window.addEventListener('load', () => {
            reels.forEach(reel => {
                document.getElementById(reel).textContent = 
                    symbols[Math.floor(Math.random() * symbols.length)];
            });
        });
    </script>
    
    <div class="prize-info">
        <h3>üí∞ ÈáëÈ¢ùËØ¥Êòé</h3>
        <p>ËΩ¨Âä®ËΩ¨ËΩÆÔºåËé∑ÂæóÈöèÊú∫ÈáëÈ¢ùÂ•ñÂä±ÔºÅ</p>
        <div class="prize-grid">
            <div class="prize-item">+4Âä†Â∏Å</div>
            <div class="prize-item">+2Âä†Â∏Å</div>
            <div class="prize-item">-2Âä†Â∏Å</div>
            <div class="prize-item">-4Âä†Â∏Å</div>
            <div class="prize-item">0Âä†Â∏Å</div>
        </div>
    </div>
    
</body>
</html>