<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>幸运转盘</title>
    <link rel="stylesheet" href="/styles.css">
    <style>
        #container {
            position: relative;
            display: inline-block;
            margin: 20px 0;
        }
        #pointer {
            width: 0;
            height: 0;
            border-left: 15px solid transparent;
            border-right: 15px solid transparent;
            border-top: 30px solid #333;
            position: absolute;
            top: -15px;
            left: 50%;
            transform: translateX(-50%);
            z-index: 10;
        }
        #button-area {
            margin-top: 20px;
        }
        
        /* 手机端优化 */
        @media (max-width: 768px) {
            #container {
                margin: 10px 0;
            }
            
            #wheel {
                width: 250px;
                height: 250px;
            }
            
            #spinButton {
                padding: 12px 25px;
                font-size: 14px;
            }
            
            .game-container {
                padding: 15px;
            }
            
            .game-container h1 {
                font-size: 1.8rem;
                margin-bottom: 15px;
            }
            
            /* Mobile centering */
            body {
                display: flex;
                justify-content: center;
                align-items: center;
                min-height: 100vh;
                margin: 0;
                padding: 0;
            }
            
            @keyframes blink {
                0%, 50% { opacity: 1; }
                51%, 100% { opacity: 0.3; }
            }
        }
        #spinButton {
            padding: 15px 30px;
            background: linear-gradient(45deg, #ff6b6b, #ee5a24);
            color: white;
            border: none;
            border-radius: 25px;
            font-size: 16px;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s;
        }
        #spinButton:hover:not(:disabled) {
            background: linear-gradient(45deg, #ee5a24, #ff6b6b);
            transform: translateY(-2px);
        }
        #spinButton:disabled {
            background: #95a5a6;
            cursor: not-allowed;
            transform: none;
        }
        
        /* 挑战规则样式 */
        .challenge-rules {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border: 2px solid #dee2e6;
            border-radius: 12px;
            padding: 20px;
            margin: 20px 0;
            max-width: 600px;
            margin-left: auto;
            margin-right: auto;
        }
        
        .challenge-rules h3 {
            text-align: center;
            color: #495057;
            margin-bottom: 15px;
            font-size: 1.2rem;
        }
        
        .rules-container {
            display: flex;
            flex-direction: column;
            gap: 15px;
        }
        
        .rule-section {
            background: white;
            padding: 15px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        
        .rule-section strong {
            display: block;
            margin-bottom: 8px;
            color: #333;
        }
        
        .success {
            color: #28a745;
            font-weight: bold;
            font-size: 1.1rem;
        }
        
        .fail {
            color: #dc3545;
            font-weight: bold;
            font-size: 1.1rem;
        }
        
        .special-rules {
            display: flex;
            flex-direction: column;
            gap: 8px;
            margin-top: 8px;
        }
        
        .special-rules span {
            padding-left: 20px;
        }
        
        @media (max-width: 768px) {
            .challenge-rules {
                padding: 15px;
                margin: 15px 0;
            }
            
            .challenge-rules h3 {
                font-size: 1rem;
            }
            
            .rule-section {
                padding: 12px;
                font-size: 0.9rem;
            }
            
            .success, .fail {
                font-size: 1rem;
            }
        }
    </style>
</head>
<body>
    <a href="/" class="back-button">← 返回</a>
    <div class="game-container">
        <h1>🎡 挑战转盘</h1>
        <p>玩家：<%= username %></p>
        <p style="color: #666;">转动转盘，接受生存直播挑战！</p>
        
        <div id="container">
            <div id="pointer"></div>
            <canvas id="wheel" width="300" height="300"></canvas>
        </div>
        
        <div id="button-area">
            <button id="spinButton" onclick="spin()">🎰 开始转动</button>
        </div>
        
        <div id="result" style="margin-top: 20px; font-size: 1.2rem; min-height: 40px;"></div>
        
        <div id="countdown-timer" style="display: none; margin-top: 20px; padding: 15px; background: #fff3cd; border: 2px solid #ffc107; border-radius: 10px;">
            <h3 style="color: #856404; margin: 0 0 10px 0;">⏰ 路人任务倒计时</h3>
            <div id="countdown-display" style="font-size: 2rem; font-weight: bold; color: #dc3545; text-align: center;"></div>
        </div>
        
        <div class="challenge-rules">
            <h3>💰 挑战金额规则</h3>
            <div class="rules-container">
                <div class="rule-section">
                    <strong>🎯 通用规则：</strong>
                    <span>所有挑战成功 <span class="success">+20元</span> | 失败 <span class="fail">-20元</span></span>
                </div>
                <div class="rule-section special">
                    <strong>⭐ 特殊规则（要微信）：</strong>
                    <div class="special-rules">
                        <span>麻瓜：成功 <span class="success">+30元</span> | 失败 <span class="fail">-10元</span></span>
                        <span>大彪：成功 <span class="success">+20元</span> | 失败 <span class="fail">-10元</span></span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        const username = "<%= username %>";
        
        // 路人相关任务列表
        const passerbyTasks = [
            '和路人美女要微信',
            '和路人美女合照',
            '给路人吉他唱歌打分',
            '要路人帅哥微信',
            '找路人要吃的',
            '和路人音准比拼',
            '和路人歌手battle',
            '找路人妹妹合唱',
            '连续夸赞路人美女30秒'
        ];
        
        let countdownInterval = null;
        let countdownEndTime = null;
        
        // 挑战任务和颜色 - 生存直播版
        const challenges = [
            '2元买吃的', 'Quiz', 'Scratch', 'Slot', '集体10个深蹲',
            '和路人美女要微信', '和路人美女合照', '给路人吉他唱歌打分',
            '集体热舞1分钟', '集体10个俯卧撑', '公主抱下蹲5个',
            '要路人帅哥微信', '找路人要吃的', '和路人音准比拼',
            '和路人歌手battle', '找路人妹妹合唱', '回答队友真心话',
            '连续夸赞路人美女30秒', '人群中大声清唱10秒', '转盘次数+2'
        ];
        const colors = [
            "#f44336", "#4caf50", "#2196f3", "#ff9800", "#9c27b0", "#607d8b",
            "#e91e63", "#795548", "#009688", "#ff5722", "#673ab7", "#3f51b5", 
            "#ffc107", "#00bcd4", "#ff6b6b", "#4ecdc4", "#45b7d1", "#f7b731", "#5f27cd", "#e17055"
        ];
        const canvas = document.getElementById("wheel");
        const ctx = canvas.getContext("2d");
        
        // 动态调整Canvas尺寸 - 支持高DPI屏幕
        function resizeCanvas() {
            const isMobile = window.innerWidth <= 768;
            const size = isMobile ? 250 : 300;
            const dpr = window.devicePixelRatio || 1;
            
            // 设置实际Canvas分辨率（考虑设备像素比）
            canvas.width = size * dpr;
            canvas.height = size * dpr;
            
            // 设置显示尺寸
            canvas.style.width = size + 'px';
            canvas.style.height = size + 'px';
            
            // 重置变换矩阵，避免累积缩放
            ctx.setTransform(1, 0, 0, 1, 0, 0);
            // 只设置一次缩放
            ctx.scale(dpr, dpr);
        }
        
        window.addEventListener('resize', () => {
            resizeCanvas();
            drawWheel();
        });
        
        resizeCanvas();
        
        function drawWheel() {
            const arc = 2 * Math.PI / challenges.length;
            const isMobile = window.innerWidth <= 768;
            const size = isMobile ? 250 : 300;
            const center = size / 2;
            const radius = center - 10;
            
            // 清除画布
            ctx.clearRect(0, 0, size, size);
            
            for (let i = 0; i < challenges.length; i++) {
                const start = i * arc;
                ctx.beginPath();
                ctx.moveTo(center, center);
                ctx.fillStyle = colors[i];
                ctx.arc(center, center, radius, start, start + arc);
                ctx.fill();
                ctx.save();
                ctx.translate(center, center);
                ctx.rotate(start + arc / 2);
                ctx.fillStyle = "#fff";
                // 根据屏幕大小调整字体，确保高DPI屏幕下清晰
                const fontSize = isMobile ? 8 : 10;
                ctx.font = `${fontSize}px Arial`;
                ctx.textAlign = "right";
                ctx.fillText(challenges[i], radius - 8, 3);
                ctx.restore();
            }
        }
        
        drawWheel();
        
        function generateNonce(length = 16) {
            const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
            return Array.from({ length }, () => chars[Math.floor(Math.random() * chars.length)]).join('');
        }
        
        async function spin() {
            const button = document.getElementById('spinButton');
            const resultDiv = document.getElementById('result');
            
            // 清除之前的倒计时
            hideCountdown();
            
            // 防止重复点击
            button.disabled = true;
            resultDiv.textContent = "转动中，请稍候...";
            
            const timestamp = Math.floor(Date.now() / 1000);
            const nonce = generateNonce();
            
            try {
                const response = await fetch('/api/spin', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ username, timestamp, nonce })
                });
                
                const data = await response.json();
                
                if (!data.success) {
                    resultDiv.textContent = "❌ " + data.message;
                    button.disabled = false;
                    return;
                }
                
                // 完全按照原版的动画逻辑
                const finalAngle = 360 * 5 + (270 - data.angle);
                const duration = 4000;
                const start = performance.now();
                
                function animate(now) {
                    const t = Math.min((now - start) / duration, 1);
                    const eased = 1 - Math.pow(1 - t, 3); // 原版缓动函数
                    const angle = finalAngle * eased;
                    
                    const isMobile = window.innerWidth <= 768;
                    const size = isMobile ? 250 : 300;
                    const center = size / 2;
                    
                    ctx.clearRect(0, 0, size, size);
                    ctx.save();
                    ctx.translate(center, center);
                    ctx.rotate((angle * Math.PI) / 180);
                    ctx.translate(-center, -center);
                    drawWheel();
                    ctx.restore();
                    
                    if (t < 1) {
                        requestAnimationFrame(animate);
                    } else {
                        let displayContent = `
                            <div style="color: #28a745; font-weight: bold; text-align: center; font-size: 1.2rem; padding: 15px; background: #f8f9fa; border-radius: 10px; margin-top: 20px;">
                                ${data.prize}
                            </div>
                        `;
                        
                        // 特殊任务额外显示
                        const prizeText = data.prize;
                        
                        // 歌手battle特殊显示
                        if (prizeText.includes('和路人歌手battle')) {
                            const singers = ['周杰伦', '林俊杰', '王力宏', '陶喆', '邓紫棋', '孙燕姿', '张惠妹', '梁静茹'];
                            const randomSinger = singers[Math.floor(Math.random() * singers.length)];
                            displayContent += `
                                <div style="color: #28a745; font-size: 1.1rem; margin-top: 10px; padding: 10px; background: #d4edda; border-radius: 8px;">
                                    任务：轮流演唱【${randomSinger}】歌曲
                                </div>
                            `;
                        }
                        
                        // 音准比拼特殊显示
                        if (prizeText.includes('和路人音准比拼')) {
                            displayContent += `
                                <div style="color: #28a745; font-size: 1.1rem; margin-top: 10px; padding: 10px; background: #d4edda; border-radius: 8px;">
                                    任务：全民K歌演唱同一首歌半首，看分数高低
                                </div>
                            `;
                        }
                        
                        resultDiv.innerHTML = displayContent;
                        button.disabled = false;
                        
                        // 检查是否是路人相关任务
                        const isPasserbyTask = passerbyTasks.some(task => prizeText.includes(task));
                        
                        if (isPasserbyTask) {
                            startCountdown();
                        }
                    }
                }
                
                requestAnimationFrame(animate);
                
            } catch (error) {
                resultDiv.textContent = "❌ 网络错误，请重试";
                button.disabled = false;
                console.error('Error:', error);
            }
        }
        
        // 开始倒计时
        function startCountdown() {
            const timerDiv = document.getElementById('countdown-timer');
            const displayDiv = document.getElementById('countdown-display');
            
            timerDiv.style.display = 'block';
            countdownEndTime = Date.now() + 5 * 60 * 1000; // 5分钟
            
            countdownInterval = setInterval(() => {
                const remaining = Math.max(0, countdownEndTime - Date.now());
                const minutes = Math.floor(remaining / 60000);
                const seconds = Math.floor((remaining % 60000) / 1000);
                
                displayDiv.textContent = `${minutes}:${seconds.toString().padStart(2, '0')}`;
                
                if (remaining <= 0) {
                    hideCountdown();
                }
                
                // 最后30秒变红色闪烁
                if (remaining <= 30000) {
                    displayDiv.style.animation = 'blink 1s infinite';
                }
            }, 100);
        }
        
        // 隐藏倒计时
        function hideCountdown() {
            if (countdownInterval) {
                clearInterval(countdownInterval);
                countdownInterval = null;
            }
            
            const timerDiv = document.getElementById('countdown-timer');
            const displayDiv = document.getElementById('countdown-display');
            
            timerDiv.style.display = 'none';
            displayDiv.style.animation = 'none';
        }
    </script>
</body>
</html>