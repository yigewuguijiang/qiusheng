<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>安全管理面板</title>
    <style>
        body {
            font-family: 'Microsoft YaHei', Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background: #f5f5f5;
        }
        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        .header {
            text-align: center;
            margin-bottom: 30px;
            padding-bottom: 20px;
            border-bottom: 2px solid #007bff;
        }
        .stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        .stat-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 20px;
            border-radius: 10px;
            text-align: center;
        }
        .stat-number {
            font-size: 2em;
            font-weight: bold;
            margin-bottom: 5px;
        }
        .stat-label {
            font-size: 0.9em;
            opacity: 0.9;
        }
        .section {
            margin-bottom: 30px;
        }
        .section h3 {
            color: #333;
            border-bottom: 2px solid #007bff;
            padding-bottom: 10px;
        }
        .table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 15px;
        }
        .table th, .table td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
        .table th {
            background: #f8f9fa;
            font-weight: bold;
        }
        .table tr:hover {
            background: #f5f5f5;
        }
        .btn {
            background: #dc3545;
            color: white;
            border: none;
            padding: 8px 16px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 0.9em;
        }
        .btn:hover {
            background: #c82333;
        }
        .refresh-btn {
            background: #28a745;
            color: white;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            margin-bottom: 20px;
        }
        .refresh-btn:hover {
            background: #218838;
        }
        .score-high { color: #dc3545; font-weight: bold; }
        .score-medium { color: #ffc107; font-weight: bold; }
        .score-low { color: #28a745; }
        .login-form {
            max-width: 400px;
            margin: 100px auto;
            padding: 30px;
            background: white;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        .form-group {
            margin-bottom: 20px;
        }
        .form-group label {
            display: block;
            margin-bottom: 5px;
            font-weight: bold;
        }
        .form-group input {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 16px;
        }
        .login-btn {
            width: 100%;
            background: #007bff;
            color: white;
            border: none;
            padding: 12px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
        }
        .login-btn:hover {
            background: #0056b3;
        }
        .error {
            color: #dc3545;
            margin-top: 10px;
            text-align: center;
        }
    </style>
</head>
<body>
    <div id="loginForm" class="login-form">
        <h2 style="text-align: center; margin-bottom: 30px;">🔐 安全管理面板</h2>
        <div class="form-group">
            <label for="password">管理员密码：</label>
            <input type="password" id="password" placeholder="输入管理员密码">
        </div>
        <button class="login-btn" onclick="login()">登录</button>
        <div id="error" class="error"></div>
    </div>

    <div id="dashboard" class="container" style="display: none;">
        <div class="header">
            <h1>🛡️ 安全管理面板</h1>
            <p>实时监控系统安全状态</p>
        </div>

        <button class="refresh-btn" onclick="loadData()">🔄 刷新数据</button>

        <div class="stats">
            <div class="stat-card">
                <div class="stat-number" id="blacklistCount">-</div>
                <div class="stat-label">黑名单IP</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="activeUsers">-</div>
                <div class="stat-label">活跃用户</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="suspiciousUsers">-</div>
                <div class="stat-label">可疑用户</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="lastUpdate">-</div>
                <div class="stat-label">最后更新</div>
            </div>
        </div>

        <div class="section">
            <h3>🚫 黑名单IP</h3>
            <div id="blacklistSection">
                <p>加载中...</p>
            </div>
        </div>

        <div class="section">
            <h3>👥 用户行为监控</h3>
            <table class="table">
                <thead>
                    <tr>
                        <th>IP地址</th>
                        <th>总请求数</th>
                        <th>可疑评分</th>
                        <th>平均间隔(ms)</th>
                        <th>最小间隔(ms)</th>
                        <th>最后活动</th>
                        <th>操作</th>
                    </tr>
                </thead>
                <tbody id="behaviorTable">
                    <tr><td colspan="7">加载中...</td></tr>
                </tbody>
            </table>
        </div>
    </div>

    <script>
        let currentPassword = '';

        function login() {
            const password = document.getElementById('password').value;
            if (!password) {
                showError('请输入密码');
                return;
            }

            // 验证密码
            fetch('/admin/security', {
                headers: {
                    'Authorization': 'Bearer ' + password
                }
            })
            .then(response => {
                if (response.ok) {
                    currentPassword = password;
                    document.getElementById('loginForm').style.display = 'none';
                    document.getElementById('dashboard').style.display = 'block';
                    loadData();
                } else {
                    showError('密码错误');
                }
            })
            .catch(error => {
                showError('连接失败');
            });
        }

        function showError(message) {
            document.getElementById('error').textContent = message;
        }

        function loadData() {
            fetch('/admin/security', {
                headers: {
                    'Authorization': 'Bearer ' + currentPassword
                }
            })
            .then(response => response.json())
            .then(data => {
                updateDashboard(data);
            })
            .catch(error => {
                console.error('Error:', error);
            });
        }

        function updateDashboard(data) {
            const security = data.security;
            
            // 更新统计数据
            document.getElementById('blacklistCount').textContent = security.blacklistedIPs;
            document.getElementById('activeUsers').textContent = security.activeUsers;
            document.getElementById('suspiciousUsers').textContent = security.suspiciousUsers;
            document.getElementById('lastUpdate').textContent = new Date().toLocaleTimeString();

            // 更新黑名单
            const blacklistSection = document.getElementById('blacklistSection');
            if (security.blacklist.length === 0) {
                blacklistSection.innerHTML = '<p style="color: #28a745;">✅ 当前无黑名单IP</p>';
            } else {
                let html = '<table class="table"><thead><tr><th>IP地址</th><th>操作</th></tr></thead><tbody>';
                security.blacklist.forEach(ip => {
                    html += `<tr>
                        <td>${ip}</td>
                        <td><button class="btn" onclick="unblockIP('${ip}')">解封</button></td>
                    </tr>`;
                });
                html += '</tbody></table>';
                blacklistSection.innerHTML = html;
            }

            // 更新行为表格
            const behaviorTable = document.getElementById('behaviorTable');
            if (security.recentBehavior.length === 0) {
                behaviorTable.innerHTML = '<tr><td colspan="7">暂无用户数据</td></tr>';
            } else {
                let html = '';
                security.recentBehavior.forEach(user => {
                    const scoreClass = user.suspicionScore > 60 ? 'score-high' : 
                                     user.suspicionScore > 30 ? 'score-medium' : 'score-low';
                    html += `<tr>
                        <td>${user.ip}</td>
                        <td>${user.totalRequests}</td>
                        <td><span class="${scoreClass}">${user.suspicionScore}</span></td>
                        <td>${user.avgInterval}</td>
                        <td>${user.minInterval}</td>
                        <td>${new Date(user.lastSeen).toLocaleString()}</td>
                        <td><button class="btn" onclick="unblockIP('${user.ip}')">重置</button></td>
                    </tr>`;
                });
                behaviorTable.innerHTML = html;
            }
        }

        function unblockIP(ip) {
            if (!confirm(`确定要解封/重置 ${ip} 吗？`)) {
                return;
            }

            fetch('/admin/security/unblock', {
                method: 'POST',
                headers: {
                    'Authorization': 'Bearer ' + currentPassword,
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ ip: ip })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('操作成功');
                    loadData();
                } else {
                    alert('操作失败: ' + data.message);
                }
            })
            .catch(error => {
                alert('操作失败');
            });
        }

        // 每30秒自动刷新
        setInterval(() => {
            if (currentPassword && document.getElementById('dashboard').style.display !== 'none') {
                loadData();
            }
        }, 30000);

        // 回车登录
        document.getElementById('password').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                login();
            }
        });
    </script>
</body>
</html>